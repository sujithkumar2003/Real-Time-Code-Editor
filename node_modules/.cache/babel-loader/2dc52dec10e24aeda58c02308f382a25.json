{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/css/css\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../mode/css/css\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {\n    \"active\": 1,\n    \"after\": 1,\n    \"before\": 1,\n    \"checked\": 1,\n    \"default\": 1,\n    \"disabled\": 1,\n    \"empty\": 1,\n    \"enabled\": 1,\n    \"first-child\": 1,\n    \"first-letter\": 1,\n    \"first-line\": 1,\n    \"first-of-type\": 1,\n    \"focus\": 1,\n    \"hover\": 1,\n    \"in-range\": 1,\n    \"indeterminate\": 1,\n    \"invalid\": 1,\n    \"lang\": 1,\n    \"last-child\": 1,\n    \"last-of-type\": 1,\n    \"link\": 1,\n    \"not\": 1,\n    \"nth-child\": 1,\n    \"nth-last-child\": 1,\n    \"nth-last-of-type\": 1,\n    \"nth-of-type\": 1,\n    \"only-of-type\": 1,\n    \"only-child\": 1,\n    \"optional\": 1,\n    \"out-of-range\": 1,\n    \"placeholder\": 1,\n    \"read-only\": 1,\n    \"read-write\": 1,\n    \"required\": 1,\n    \"root\": 1,\n    \"selection\": 1,\n    \"target\": 1,\n    \"valid\": 1,\n    \"visited\": 1\n  };\n  CodeMirror.registerHelper(\"hint\", \"css\", function (cm) {\n    var cur = cm.getCursor(),\n        token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n    if (token.type == \"keyword\" && \"!important\".indexOf(token.string) == 0) return {\n      list: [\"!important\"],\n      from: CodeMirror.Pos(cur.line, token.start),\n      to: CodeMirror.Pos(cur.line, token.end)\n    };\n    var start = token.start,\n        end = cur.ch,\n        word = token.string.slice(0, end - start);\n\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\";\n      start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n    var result = [];\n\n    function add(keywords) {\n      for (var name in keywords) {\n        if (!word || name.lastIndexOf(word, 0) == 0) result.push(name);\n      }\n    }\n\n    var st = inner.state.state;\n\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});","map":{"version":3,"sources":["E:/Real-Time-Code-Editor/realtime-code-editor/node_modules/codemirror/addon/hint/css-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","pseudoClasses","registerHelper","cm","cur","getCursor","token","getTokenAt","inner","innerMode","getMode","state","mode","name","type","indexOf","string","list","from","Pos","line","start","to","end","ch","word","slice","test","spec","resolveMode","result","add","keywords","lastIndexOf","push","st","propertyKeywords","valueKeywords","colorKeywords","mediaTypes","mediaFeatures","length"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../mode/css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {\"active\":1, \"after\":1, \"before\":1, \"checked\":1, \"default\":1,\n    \"disabled\":1, \"empty\":1, \"enabled\":1, \"first-child\":1, \"first-letter\":1,\n    \"first-line\":1, \"first-of-type\":1, \"focus\":1, \"hover\":1, \"in-range\":1,\n    \"indeterminate\":1, \"invalid\":1, \"lang\":1, \"last-child\":1, \"last-of-type\":1,\n    \"link\":1, \"not\":1, \"nth-child\":1, \"nth-last-child\":1, \"nth-last-of-type\":1,\n    \"nth-of-type\":1, \"only-of-type\":1, \"only-child\":1, \"optional\":1, \"out-of-range\":1,\n    \"placeholder\":1, \"read-only\":1, \"read-write\":1, \"required\":1, \"root\":1,\n    \"selection\":1, \"target\":1, \"valid\":1, \"visited\":1\n  };\n\n  CodeMirror.registerHelper(\"hint\", \"css\", function(cm) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n\n    if (token.type == \"keyword\" && \"!important\".indexOf(token.string) == 0)\n      return {list: [\"!important\"], from: CodeMirror.Pos(cur.line, token.start),\n              to: CodeMirror.Pos(cur.line, token.end)};\n\n    var start = token.start, end = cur.ch, word = token.string.slice(0, end - start);\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\"; start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n\n    var result = [];\n    function add(keywords) {\n      for (var name in keywords)\n        if (!word || name.lastIndexOf(word, 0) == 0)\n          result.push(name);\n    }\n\n    var st = inner.state.state;\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});\n"]},"metadata":{},"sourceType":"script"}